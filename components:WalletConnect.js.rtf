{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import \{ useEffect, useState \} from "react";\
import \{ BrowserProvider \} from "ethers";\
\
export default function WalletConnect(\{ onReady \}) \{\
  const [address, setAddress] = useState(null);\
  const [networkName, setNetworkName] = useState("");\
  const [chainId, setChainId] = useState(null);\
  const target = Number(process.env.NEXT_PUBLIC_CHAIN_ID || 137);\
\
  useEffect(() => \{\
    if (!window?.ethereum) return;\
    const handle = async () => \{\
      const provider = new BrowserProvider(window.ethereum);\
      try \{\
        const net = await provider.getNetwork();\
        setChainId(Number(net.chainId));\
        setNetworkName(net.name);\
        const accounts = await provider.listAccounts();\
        if (accounts.length) \{\
          setAddress(accounts[0].address);\
          onReady?.(provider, accounts[0].address);\
        \}\
      \} catch (e) \{ /* ignore */ \}\
    \};\
    handle();\
    // react to account/network changes\
    window.ethereum?.on?.("accountsChanged", () => handle());\
    window.ethereum?.on?.("chainChanged", () => location.reload());\
    return () => \{\
      window.ethereum?.removeListener?.("accountsChanged", handle);\
      window.ethereum?.removeListener?.("chainChanged", () => location.reload());\
    \};\
  \}, []);\
\
  const connect = async () => \{\
    if (!window?.ethereum) \{ alert("MetaMask not found."); return; \}\
    const provider = new BrowserProvider(window.ethereum);\
    const accounts = await provider.send("eth_requestAccounts", []);\
    const net = await provider.getNetwork();\
    setChainId(Number(net.chainId));\
    setNetworkName(net.name);\
    setAddress(accounts[0]);\
    onReady?.(provider, accounts[0]);\
  \};\
\
  const switchToPolygon = async () => \{\
    await window.ethereum.request(\{\
      method: "wallet_switchEthereumChain",\
      params: [\{ chainId: "0x89" \}] // 137\
    \});\
    location.reload();\
  \};\
\
  return (\
    <div className="card" style=\{\{marginBottom:12\}\}>\
      <div className="row" style=\{\{alignItems:"center", justifyContent:"space-between"\}\}>\
        <div>\
          <div style=\{\{fontWeight:700\}\}>Wallet</div>\
          <div className="sub">\
            \{address ? (\
              <>Connected: <span className="badge blue">\{address.slice(0,6)\}\'85\{address.slice(-4)\}</span></>\
            ) : "Not connected"\}\
          </div>\
          \{chainId && chainId !== target && (\
            <div className="notice" style=\{\{marginTop:8\}\}>\
              You\'92re on <b>chain \{chainId\}</b>. Please switch to <b>Polygon Mainnet (137)</b>.\
              <div style=\{\{marginTop:8\}\}>\
                <button className="btn secondary" onClick=\{switchToPolygon\}>Switch to Polygon</button>\
              </div>\
            </div>\
          )\}\
        </div>\
        <div>\
          \{!address ? (\
            <button className="btn" onClick=\{connect\}>Connect MetaMask</button>\
          ) : (\
            <span className="badge">\{networkName || "Polygon"\}</span>\
          )\}\
        </div>\
      </div>\
    </div>\
  );\
\}\
}